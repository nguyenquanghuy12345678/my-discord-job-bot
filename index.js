import { Client, GatewayIntentBits } from 'discord.js';
import dotenv from 'dotenv';
import fetch from 'node-fetch';
dotenv.config();

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
    ],
});

client.once('ready', () => {
    console.log(`ü§ñ Bot ƒë√£ ƒëƒÉng nh·∫≠p v·ªõi t√™n ${client.user.tag}`);
});

client.on('messageCreate', async (message) => {
    if (message.author.bot) return;

    try {
        if (message.content.startsWith('!job')) {
            const response = await fetch('https://zenquotes.io/api/random');
            const data = await response.json();
            const quote = `${data[0].q} ‚Äî *${data[0].a}*`;
            await message.reply(`üíº **G·ª£i √Ω ngh·ªÅ nghi·ªáp / ƒë·ªông l·ª±c:**\n> ${quote}`);
        }

        else if (message.content.startsWith('!cv')) {
            const response = await fetch('https://zenquotes.io/api/random');
            const data = await response.json();
            const quote = `${data[0].q} ‚Äî *${data[0].a}*`;
            await message.reply(`üìÑ **Tips CV hay:**\n> ${quote}`);
        }

        else if (message.content.startsWith('!interview')) {
            const response = await fetch('https://zenquotes.io/api/random');
            const data = await response.json();
            const quote = `${data[0].q} ‚Äî *${data[0].a}*`;
            await message.reply(`üé§ **Chu·∫©n b·ªã ph·ªèng v·∫•n:**\n> ${quote}`);
        }
    } catch (err) {
        console.error("‚ùå L·ªói khi g·ªçi API:", err);
        await message.reply("‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c quote l√∫c n√†y, th·ª≠ l·∫°i sau nh√©!");
    }
});

client.login(process.env.DISCORD_TOKEN);
